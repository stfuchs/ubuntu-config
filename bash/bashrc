#!/bin/sh


alias api='sudo aptitude install'
alias apud='sudo aptitude update'
alias apug='sudo aptitude full-upgrade'
alias aps='aptitude show'
alias appo='apt-cache policy'
alias resource='source ~/.bashrc'
alias ..='cd ..'
alias em='emacs -nw -q -l ~/git/ubuntu-config/emacs/my_config.el'
alias parallel='parallel --gnu'
alias hcat='pygmentize -f terminal256 -O style=native -g'
alias hcat_emacs='hcat ~/git/ubuntu-config/emacs/my_config.el'
alias hcat_bash='hcat ~/git/ubuntu-config/bash/bashrc'
alias compile='g++ -W -Wall -Wextra -pedantic -std=c++0x'

alias mm='grc -c /usr/share/grc/conf.gcc -e -s make -j 4'
alias gemacs='setsid emacs -q -l ~/git/ubuntu-config/emacs/config-v2.el'

alias rviz='rosrun rviz rviz'
alias gitk='git log --graph --decorate --pretty=oneline --abbrev-commit'
alias treel='tree -fi'
alias du='du -h --max-depth=0'
alias ipy='ipython --pylab'
alias ipynb='ipython notebook'
alias ipycon='ipython console --existing'
alias pdf='evince'
# tar help:
#   c: create
#   x: extract
#   f: file (in/out)
#   z: zip, dezip
alias unpack='tar xf'
alias pack='tar cfz'
alias copy='xclip -sel clip'
alias lsd='ls -d1 $PWD/*'

# function:
findheader() { find . -type f -name '*.h' | parallel -k "grep -Hn --color=always '$@' "; }
findsource() { find . -type f -name '*.cpp' -o -name '*.hpp' | parallel -k "grep -Hn --color=always '$@' "; }
findcpp() { find . -type f -name '*.cpp' -o -name '*.hpp' -o -name '*.h' | parallel -k "grep -Hn --color=always '$@' "; }

findpy() { find . -type f -name '*.py' | parallel -k "grep -Hn --color=always '$@' "; }

masterUri() { export ROS_MASTER_URI="http://$@:11311"; }
mkcd() { mkdir $@ && cd $@; }
imgs2mjpeg()
{
    ffmpeg -f image2 -i $1 -c:v libx264 -preset ultrafast -q:v 0 $2.mp4;
    ffmpeg -i $2.mp4 -c:v mjpeg -q:v 0 $2.avi;
}

colors() {
    local fgc bgc vals seq0

    printf "Color escapes are %s\n" '\e[${value};...;${value}m'
    printf "Values 30..37 are \e[33mforeground colors\e[m\n"
    printf "Values 40..47 are \e[43mbackground colors\e[m\n"
    printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"

    # foreground colors
    for fgc in {30..37}; do
        # background colors
        for bgc in {40..47}; do
            fgc=${fgc#37} # white
            bgc=${bgc#40} # black

            vals="${fgc:+$fgc;}${bgc}"
            vals=${vals%%;}

            seq0="${vals:+\e[${vals}m}"
            printf "  %-9s" "${seq0:-(default)}"
            printf " ${seq0}TEXT\e[m"
            printf " \e[${vals:+${vals+$vals;}}1mBOLD\e[m"
            done
        echo; echo
        done
}

#function parseGitBranch { git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/git:\1/'; }

#export LD_LIBRARY_PATH=/usr/local/cuda-5.0/lib64:/lib:$LD_LIBRARY_PATH
#export PATH=/usr/local/cuda-5.0/bin:$PATH
export PATH=$HOME/apps/bin:$PATH
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/apps/usr/bin:$PATH
export GOPATH=$HOME/gopath
export PATH=$GOPATH:$GOPATH/bin:/usr/local/go/bin:$PATH
export MANPATH=$HOME/apps/usr/share/man:$MANPATH

#export PS1='\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
cbg='\[\033[1;30m\]' #dark gray
cfg1='\[\033[0;33m\]' #yellow
#cfg2='\[\033[0;32m\]' #green
#cfg1='\[\033[0;31m\]' #red
cfg2='\[\033[0;36m\]' #cyan
cquit='\[\033[0m\]' #cancel color

#PS1="$cbg\\__($cfg1\t$cbg)__($cfg2\u$cquit@$cfg2\h$cbg)__($cfg2\w$cbg)\n \\__$(__git_ps1)\$ $cquit"
#PS1=$cbg'\\__('$cfg1'\t'$cbg')__('$cfg2'\u'$cquit'@'$cfg2'\h'$cbg')__('$cfg2'\w'$cbg')\n \\__$(__git_ps1 "(\033[0;33m%s\033[1;30m)" )'$cbg'\$ '$cquit
#PS1=$cfg1'\t'$cbg'|'$cfg2'\u'$cquit'@'$cfg2'\h'$cbg'|'$cfg2'\w'$cbg'$(__git_ps1 " (\[\033[0;33m\]%s\[\033[1;30m\]) " )'$cbg'\$ '$cquit
PS1=$cfg1'\t '$cfg2'\w'$cbg'$(__git_ps1 " (\[\033[0;33m\]%s\[\033[1;30m\]) " )'$cbg'\$ '$cquit
##### Some things to install: #####
# parallel: http://www.gnu.org/software/parallel/
# Generic colorizer: http://kassiopeia.juls.savba.sk/~garabik/software/grc.html

# Printer stuff:
# list printer: lpstat -p -d
# print: lpr -P "printername" filename
# list options: lpoptions -l
# change options for user: lpoptions -o optionname=value
