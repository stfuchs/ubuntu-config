#!/bin/sh

#export PS1='\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '

# "\e[%d;%d%dm%s\e[0m" % (decorator, mode, color, text)
# decorator:
#   0: reset,normal
#   1: bold
#   2: dim
#   4: underline
# mode:
#   3: foreground
#   4: background
#   9: Light fg
#  10: Light bg
# color:
#   0: Black
#   1: Red
#   2: Green
#   3: Yellow
#   4: Blue
#   5: Magenta
#   6: Cyan
#   7: White
#   9: Default

function parse_git_branch() {
    BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
    if [ ! "${BRANCH}" == "" ]
    then
        STAT=`parse_git_dirty`
        echo "\e[1;39;45m ${BRANCH}${STAT} \e[0m"
    else
        echo ""
    fi
}

function parse_git_dirty() {
    status=`git status 2>&1 | tee`
    dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
    untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
    ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
    newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
    renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
    deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`

    bits=''
    if [ "${renamed}" == "0" ]; then
        bits=">${bits}"
    fi
    if [ "${ahead}" == "0" ]; then
        bits="*${bits}"
    fi
    if [ "${newfile}" == "0" ]; then
        bits="+${bits}"
    fi
    if [ "${untracked}" == "0" ]; then
        bits="?${bits}"
    fi
    if [ "${deleted}" == "0" ]; then
        bits="x${bits}"
    fi
    if [ "${dirty}" == "0" ]; then
        bits="!${bits}"
    fi
    if [ ! "${bits}" == "" ]; then
        echo " ${bits}"
    else
        echo ""
    fi
}

#`$(__git_ps1 ' \e[0;35m(%s)\e[0m ')
PS1="\[\e[1;39;44m\] \t \[\e[1;39;46m\] \w \[\e[0m\]`parse_git_branch` \$ "
